[timeouts]
creation = 600
configured = 600
notrunning = 600
deletion = 1200
reconfigure = 120
total = 8000
status = 360
cloud = 600

[deletion]
# Maximum number of retries if infrastructure deletion fails
retries = 10
# Delay factor used between retries, resulting in increasing backoff
factor = 1.1

[polling]
# Delay between consecutive polls querying the status of infrastructure
duration = 60
# Delay between cleaning
cleaning = 7200
# Manager
manager = 60
# Updater
updater = 30

[updates]
# How often to update quotas
quotas = 120
# How often to update images & flavours
vms = 1800
# How often to attempt to deploy infrastructure in the waiting state
waiting = 800
# How often to look for clouds supporting each user
discover = 43200
# Timeout for discovering new clouds
deadline = 1200

[logs]
# Log files
filename = /var/log/imc/imc.log
max_bytes = 10485760
num = 10
# Directory for saving contextualisation error and failure messages
contmsg = /var/spool/prominence/contmsg

[im]
# Infrastructure Manager access info
url = http://localhost:8800
username = user
password = pass

[ansible]
# Used for dynamically deploying Ansible nodes for multi-node jobs
template = /etc/prominence/radl/template-public-ansible-node.radl
cores = 2
memory = 2
architecture = x86_64
distribution = centos
type = linux
version = 7
private_key = /etc/prominence/id_rsa_ansible
public_key = /etc/prominence/id_rsa_ansible.pub

[pool]
# Maximum number of worker processes
deployers = 24
deleters = 24
updaters = 5

[deployment]
# Maximum number of retries upon infrastructure deployment failure
retries = 2
# Maximum number of times unconfigured infrastructure will be reconfigured
reconfigures = 6

[db]
# PostgreSQL access info
host = localhost
port = 5432
db = imc
username = imc
password = 

[auth]
# Credentials required to access the REST API
username = 
password = 

[clouds]
# Directory containing resource definition json files
path = /etc/prominence/clouds

[cleanup]
# Remove deleted infrastructure from the DB after this time
remove_after = 604800
# Retry any incomplete deletions after this time
retry_failed_deletes_after = 7200
# Delete stuck infrastructures after this time
delete_stuck_infras_after = 7200

[credentials]
host-cert = /etc/prominence/credentials/hostcert.pem
host-key = /etc/prominence/credentials/hostkey.pem

[features]
# Query AppDB for information about clouds
enable_appdb = True
# List of supported VOs
vos = 

[egi]
enabled = True
region = FedCloud
goc_url = https://goc.egi.eu/gocdbpi/public/
# Any sites in the blacklist below are ignored
blacklist = 

[egi.credentials]
client_id = 
client_secret = 
url = https://aai.egi.eu/oidc
scope = openid email profile

[egi.image]
name = appdb://site/egi.ubuntu.20.04
image = EGI Ubuntu 20.04
architecture = x86_64
distribution = ubuntu
type = linux
version= 20.04
